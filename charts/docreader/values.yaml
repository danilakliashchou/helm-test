# Default values for docreader.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ""
fullnameOverride: ""

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1001

replicaCount: 1

image:
  repository: regulaforensics/docreader
  # Overrides the image tag whose default is the chart appVersion.
  tag: "nightly"
  pullPolicy: Always
imagePullSecrets: []

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 0

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 2000m
  #   memory: 2Gi
  # requests:
  #   cpu: 1000m
  #   memory: 2Gi

nodeSelector: {}
tolerations: []
affinity: {}

# Supply the name of existing secret with regula.license file.
# You can load it to a k8s generic secret via:
# 1. `kubectl create secret generic docreader-license -n namespace --from-file=regula.license`
# 2. manifest file:
# apiVersion: v1
# kind: Secret
# metadata:
#   name: docreader-license
# data:
#   regula.license: <base64_encoded regula.license file content>
# type: Opaque

# docraderLicenseSecretName: docreader-license
#
licenseSecretName: ~

config: ~
# This string (can be templated) will be mounted into the Docreader as a custom .env file
# You can bake a .env in to your image instead.
# config: |-
#   DOCREADER_BIND="0.0.0.0:8080"
#   DOCREADER_WORKERS="1"
#   DOCREADER_BACKLOG="15"

env: []
# - name: ""
#   value: ""

# Mount additional volumes into docreader.
extraVolumes: []
extraVolumeMounts: []

logs:
  persistence:
    # Enable persistent volume for storing logs (Access/App/Process)
    # If set, please ensure propper envs are set (any or all):
    # DOCREADER_LOGS_ACCESS_FILE="true"
    # DOCREADER_LOGS_APP_FILE="true"
    # DOCREADER_PROCESS_RESULTS_LOG_FILE="true"
    # DOCREADER_PROCESS_RESULTS_LOG_PATH="logs/process"
    # should start with "logs/required_path" or leave deafault values
    enabled: false
    # Volume size for logs
    size: 10Gi
    # If using a custom storageClass, pass name here
    storageClassName:
    # If defined, PVC must be created manually before volume will be bound
    existingClaim:

# Supply the name of an existing PVC with prepopulated PKD files.
# Please ensure propper envs are set
# DOCREADER_RFID_PKD_PA_FILE="true"
# DOCREADER_RFID_PKD_PA_PATH="/app/rfid_pkd"
rfidpkd:
  existingClaim: ~

# We recommend to expose service to public via Ingress
# In case it is not possible please ensure propper envs are set:
# DOCREADER_HTTPS="true"
# DOCREADER_CERT_FILE="certs/tls.cert"
# DOCREADER_KEY_FILE="certs/tls.key"
# tls secret is created and httpsCertificateSecretName is populated
https:
  enabled: false

# Supply the name of existing secret with key/cert files.
# You can load it to a k8s tls secret via:
# 1. `kubectl create secret tls certificates --key="tls.key" --cert="tls.crt"`
# 2. manifest file:
# apiVersion: v1
# kind: Secret
# metadata:
#   name: certificates
# data:
#   tls.crt: <base64_encoded tls.crt file content>
#   tls.key: <base64_encoded tls.key file content>
# type: kubernetes.io/tls

# httpsCertificateSecretName: certificates
#
httpsCertificateSecretName: ~

service:
  type: ClusterIP
  ## service annotations
  annotations: {}
  port: 80
  loadBalancerIP: ~
  ## Limit load balancer source ips to list of CIDRs
  # loadBalancerSourceRanges:
  #   - "10.123.0.0/16"
  loadBalancerSourceRanges: []

ingress:
  # Enable ingress resource
  enabled: false
  # The Ingress Class for the web Ingress (used only with Kubernetes v1.19 and above)
  className: ""
  # Annotations for the web Ingress
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # The hostnames or hosts configuration for the web Ingress
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  # Enable TLS termination for the web Ingress
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local


autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80
